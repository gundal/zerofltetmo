if [ -f "/system/xbin/busybox" ]; then BB=/system/xbin/busybox; else BB=/sbin/busybox; fi;
if [ -f "/system/bin/busybox" ]; then BB=/system/bin/busybox; else BB=/sbin/busybox; fi;

# SQLite log location
LOGS=/sdcard/GuNDaL/Logs/SQLite.txt;

case $1 in
	reboot)
		echo "0" > /sys/kernel/dyn_fsync/Dyn_fsync_active;	
		$BB sync;
		$BB sleep 1;
		reboot $2;		
	;;
	  cleardata)
	echo "0" > /sys/kernel/dyn_fsync/Dyn_fsync_active;
	am force-stop com.af.synapse 2> /dev/null;
	$BB sleep 1;
	$BB rm -R /data/data/com.af.synapse/databases;
	$BB rm -R /data/data/com.af.synapse/cache;
	$BB sync;
	$BB sleep 1;
	/system/bin/reboot;
  ;;
	selinux)	
		if [[ ! -z $2 ]]; then
			if [ $2 = "Enforcing" ]; then
				setenforce 1;
			elif [ $2 = "Permissive" ]; then
				setenforce 0;
			fi;
		fi;

		#/sys/fs/selinux/enforce
		echo Boot;
  ;;
  restart)
    	am force-stop com.af.synapse 2> /dev/null;
    	$BB sleep 1;
    	reset_uci;
	$BB sync;
    	$BB sleep 1;
    	am start -a android.intent.action.MAIN -n com.af.synapse/.MainActivity 2> /dev/null;
  ;;
  fix_wifi)
	svc wifi disable 2> /dev/null;
	rm -f /data/misc/dhcp/dhcpcd*;
	svc wifi enable 2> /dev/null;
	echo "WIFI Release Renew is DONE";
  ;;
  optimizedb)
	if [ -e $LOGS ]; then
		rm $LOGS;
	fi;

	# Create Log folder on sdcard
	LOG=/sdcard/GuNDaL/Logs;

	[ ! -d "$LOG" ] && mkdir -p "$LOG";
	chmod 755 $LOG

	echo "SQLite database VACUUM and REINDEX started at $( date +"%m-%d-%Y %H:%M:%S" )" | tee -a $LOGS;
	if [ -f /sbin/sqlite3 ]; then
		
	
	for i in `$BB find /data -iname "*.db"`; do 
		sbin/sqlite3 $i 'VACUUM;' 2> /dev/null;
			resVac=$?
			if [ $resVac == 0 ]; then
				resVac="SUCCESS";
			else
				resVac="ERRCODE-$resVac";
			fi;
		sbin/sqlite3 $i 'REINDEX;' 2> /dev/null;
			resIndex=$?
			if [ $resIndex == 0 ]; then
				resIndex="SUCCESS";
			else
				resIndex="ERRCODE-$resIndex";
			fi;
		echo "Database $i:  VACUUM=$resVac  REINDEX=$resIndex" | tee -a $LOGS;
	done;

	for i in `$BB find /sdcard -iname "*.db"`; do
		sbin/sqlite3 $i 'VACUUM;' 2> /dev/null;
			resVac=$?
			if [ $resVac == 0 ]; then
				resVac="SUCCESS";
			else
				resVac="ERRCODE-$resVac";
			fi;
		sbin/sqlite3 $i 'REINDEX;' 2> /dev/null;
			resIndex=$?
			if [ $resIndex == 0 ]; then
				resIndex="SUCCESS";
			else
				resIndex="ERRCODE-$resIndex";
			fi;
		echo "Database $i:  VACUUM=$resVac  REINDEX=$resIndex" | tee -a $LOGS;
	done;
		echo "SQLite database VACUUM and REINDEX finished at $( date +"%m-%d-%Y %H:%M:%S" )" | tee -a $LOGS;
		
	$BB echo "Databases have been optimized";
else
	$BB echo "Reinstall busybox with sqlite3 support then try again"
fi
  ;;
  wipe_cache_reboot)
	echo "0" > /sys/kernel/dyn_fsync/Dyn_fsync_active;
	$BB rm -rf /cache/*
	$BB sync;
	$BB sleep 1;
	/system/bin/reboot;
  ;;
  wipe_dalvik_reboot)
	echo "0" > /sys/kernel/dyn_fsync/Dyn_fsync_active;
	$BB rm -rf /data/dalvik-cache/*
	$BB sync;
	$BB sleep 1;
	/system/bin/reboot;
  ;;
  wipe_cache-dalvik_reboot)
	echo "0" > /sys/kernel/dyn_fsync/Dyn_fsync_active;
	$BB rm -rf /cache/*
	$BB rm -rf /data/dalvik-cache/*
	$BB sync;
	$BB sleep 1;
	/system/bin/reboot;
  ;;
  clean_up)
	$BB rm -rf /cache/lost+found/*
	$BB rm -rf /data/anr/*
	$BB rm -rf /data/clipboard/*
	$BB rm -rf /data/lost+found/*
	$BB rm -rf /data/system/dropbox/*
	$BB rm -rf /data/tombstones/*
	$BB sync;
	$BB sleep 1;
	echo "Clean up done";
  ;;
scr_cache)
  $BB mount -t rootfs -o remount,rw rootfs;
  P=/res/synapse/GuNDaL/scr_cache
  if [ ! -z $2 ]; then
  if [ $2 == 0 ]; then
    echo 0 > $P
	setprop persist.sys.scrollingcache 0
  elif [ $2 == 1 ]; then
    echo 1 > $P
	setprop persist.sys.scrollingcache 1
  elif [ $2 == 2 ]; then
    echo 2 > $P
	setprop persist.sys.scrollingcache 2
  elif [ $2 == 3 ]; then
    echo 3 > $P
	setprop persist.sys.scrollingcache 3
  fi; fi
  copy=`cat $P`
  if [ $copy == 0 ]; then
    echo 0
  elif [ $copy == 1 ]; then
    echo 1
  elif [ $copy == 2 ]; then
    echo 2
  elif [ $copy == 3 ]; then
    echo 3
  fi
  ;;
esac;
